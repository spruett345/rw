def not(true) := false;
def not(false) := true;

def length([]) := 0
def length(x::xs) := 1 + length(xs)

def range(a, b) when b < a := range(b, a)
def range(a, a) := []
def range(a, b) when a < b := a :: range(a+1, b)

def x = x := true
def x != x := false

def true or _ := true;
def false or x := x;

def true and x := x;
def false and _ := false;

def log(1) :=
	0
def sin(0) :=
	0
def cos(0) :=
	1

def numerator(_ : rational(n, d)) := n
def denominator(_ : rational(n, d)) := d

def d(_ : const(x), x : sym) :=
	0
def d(x, x : sym) :=
	1
def d(y * z, x : sym) :=
	y * d(z, x) + z * d(y, x)
def d(f^g, x : sym) :=
	f^g * (d(f, x) * g/f + d(g, x) * log(f))

def d(cos(u), x) :=
	-sin(u) * d(u, x)
def d(sin(u), x) :=
	cos(u) * d(u, x)
def d(log(u), x) :=
	d(u, x) / u

def x + x := 2 * x;
def k:num * x + x := (k + 1) * x
def k:num * x + k2:num * x := (k + k2) * x

def x + 0 := x
def x * 0 := 0
def x * 1 := x
def x^1 := x
def x^0 := 1

def x^k:num* x^k2:num := x^(k + k2)
def x^k:num * x := x^(k + 1)
def x * x := x^2

def 0^k when k < 0 := Infinity
def 0^k when k > 0 := 0

def sqrt(x) := x^(1/2)
def a * a^-1 := 1

def (a * b)^c := a^c * b^c
def (a^b)^c := a^(b*c)